package com.android.slider.activities;

import java.util.Timer;

import com.android.slider.R;
import com.android.slider.utils.ExternalDataSlider;
import com.android.slider.utils.InternalDataSlider;

import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.provider.MediaStore;
import android.widget.ImageView;

public class SlidingActivity extends Activity{

	private ImageView imageView;
	
	private ImageView imageView2;
	
	private int orientation;
	
	private ExternalDataSlider externaltimerTask;
	
	private InternalDataSlider internaltimerTask;
	
	final Handler handler = new Handler();

	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.slide_show_layout);
		orientation = getResources().getConfiguration().orientation;
		imageView = (ImageView) findViewById(R.id.imageView1);
		if (orientation == 1){
			imageView2 = (ImageView) findViewById(R.id.imageView2);
		}
		runExternalTimer();
	}
	
	public void runExternalTimer(){
		initializeExternalTimerTask();
		handler.postDelayed(externaltimerTask, 1000);
	}
	
	public void runInternalTimer(){
		initializeInternalTimerTask();
		handler.postDelayed(internaltimerTask, 1000);
	}
	public void initializeExternalTimerTask(){
		
		if (orientation == 1){
			externaltimerTask = new ExternalDataSlider(this, handler, imageView, imageView2);
		}else{
			externaltimerTask = new ExternalDataSlider(this, handler, imageView);
		}
		
	}
	public void initializeInternalTimerTask(){
		
		if (orientation == 1){
			internaltimerTask = new InternalDataSlider(this, handler, imageView, imageView2);
		}else{
			internaltimerTask = new InternalDataSlider(this, handler, imageView);
		}
		
	}
	// And to convert the image URI to the direct file system path of the image file
//        public String getRealPathFromURI(Uri contentUri) {
//
//                // can post image
//                String [] proj={MediaStore.Images.Media.DATA};
//                Cursor cursor = managedQuery( contentUri,
//                                proj, // Which columns to return
//                                null,       // WHERE clause; which rows to return (all rows)
//                                null,       // WHERE clause selection arguments (none)
//                                null); // Order-by clause (ascending by name)
//                int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
//                cursor.moveToFirst();
//
//                return cursor.getString(column_index);
//        }
}
