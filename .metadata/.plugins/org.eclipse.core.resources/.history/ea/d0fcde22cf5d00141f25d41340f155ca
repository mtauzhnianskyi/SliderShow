package com.android.slider.activities;

import java.util.Timer;

import com.android.slider.R;
import com.android.slider.utils.ExternalDataSlider;

import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.provider.MediaStore;
import android.widget.ImageView;

public class SlidingActivity extends Activity{

	private static int RESULT_LOAD_IMAGE = 1;
	
	private ImageView imageView;
	
	private ImageView imageView2;
	
	private Timer timer;
	
	private int orientation;
	
	private ExternalDataSlider timerTask;
	
	final Handler handler = new Handler();

	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.slide_show_layout);
		orientation = getResources().getConfiguration().orientation;
		imageView = (ImageView) findViewById(R.id.imageView1);
		if (orientation == 1){
			imageView2 = (ImageView) findViewById(R.id.imageView2);
		}
		runTimer();
		
//        Intent i = new Intent(
//                Intent.ACTION_PICK,
//                android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
//         
//        startActivityForResult(i, RESULT_LOAD_IMAGE);
//		String[] STAR = { "*" };     
//		Uri allaudiosong = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
//		//String audioselection = MediaStore.Images.Media. + " != 0";
//		Cursor cursor;
//		cursor = managedQuery(allaudiosong, STAR, null, null, null);
//
//		
//		if (cursor != null) {
//			if (orientation != 1){
//		    if (cursor.moveToFirst()) {
//		        do {
//		            String fullpath = cursor.getString(cursor
//		                    .getColumnIndex(MediaStore.Images.Media.DATA));
//		            System.out.println("Audio Song FullPath= "+fullpath);
//		            imageView.setImageBitmap(BitmapFactory.decodeFile(fullpath));
//		        } while (cursor.moveToNext());
//		        
//		    }		
//		    } else {
//			    if (cursor.moveToFirst()) {
//			        do {
//			            String fullpath = cursor.getString(cursor
//			                    .getColumnIndex(MediaStore.Images.Media.DATA));
//			            System.out.println("Audio Song FullPath= "+fullpath);
//			            imageView.setImageBitmap(BitmapFactory.decodeFile(fullpath));
//			            if (cursor.moveToNext()){
//				            String fullpath2 = cursor.getString(cursor
//				                    .getColumnIndex(MediaStore.Images.Media.DATA));
//				            System.out.println("Audio Song FullPath= "+fullpath2);
//				            imageView2.setImageBitmap(BitmapFactory.decodeFile(fullpath2));
//			            }
//			        } while (cursor.moveToNext());
//			        
//			    }
//		    }
//		}

//		Intent intent = new Intent();
//		intent.setType("image/*");
//		intent.setAction(Intent.ACTION_GET_CONTENT);
//		startActivityForResult(Intent.createChooser(intent, "Select Picture"),1);
	}
	
	public void runTimer(){
		//timer = new Timer();
		initializeTimerTask();
		handler.postDelayed(timerTask, 1000);
		//timer.schedule(timerTask,  1000);
	}
	
	public void initializeTimerTask(){
		
		if (orientation == 1){
			timerTask = new ExternalDataSlider(this, handler, imageView, imageView2);
		}else{
			timerTask = new ExternalDataSlider(this, handler, imageView);
		}
		
	}
//	@Override
//	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
//		// TODO Auto-generated method stub
//		super.onActivityResult(requestCode, resultCode, data);
//		
//        if (resultCode == RESULT_OK) {
//
//            if (requestCode == 1) {
//
//                    // currImageURI is the global variable I'm using to hold the content:// URI of the image
//                    Uri currImageURI = data.getData();
//            }
//        }
//        if (requestCode == RESULT_LOAD_IMAGE && resultCode == RESULT_OK && null != data) {
//            Uri selectedImage = data.getData();
//            String[] filePathColumn = { MediaStore.Images.Media.DATA };
// 
//            Cursor cursor = getContentResolver().query(selectedImage,
//                    filePathColumn, null, null, null);
//            cursor.moveToFirst();
// 
//            int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
//            String picturePath = cursor.getString(columnIndex);
//            cursor.close();
//             
//            ImageView imageView = (ImageView) findViewById(R.id.imageView1);
//            imageView.setImageBitmap(BitmapFactory.decodeFile(picturePath));
//         
//        }
//	}
     // And to convert the image URI to the direct file system path of the image file
//        public String getRealPathFromURI(Uri contentUri) {
//
//                // can post image
//                String [] proj={MediaStore.Images.Media.DATA};
//                Cursor cursor = managedQuery( contentUri,
//                                proj, // Which columns to return
//                                null,       // WHERE clause; which rows to return (all rows)
//                                null,       // WHERE clause selection arguments (none)
//                                null); // Order-by clause (ascending by name)
//                int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
//                cursor.moveToFirst();
//
//                return cursor.getString(column_index);
//        }
}
