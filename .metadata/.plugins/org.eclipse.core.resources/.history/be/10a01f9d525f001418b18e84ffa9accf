package com.android.slider.utils;

import com.android.slider.R;

import android.content.Context;
import android.graphics.Bitmap;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.Animation.AnimationListener;
import android.view.animation.AnimationUtils;
import android.widget.ImageView;

public class AnimationUtil {
	
	private ImageView imageView;
	
	private Animation anim_out;
	
	private Animation anim_in;
	
	private Animation anim_out_first;
	
	private int animeType;
	
	private Bitmap bitmap;
	
	private Context context;
	
	private boolean isFirstAnimation;
	
	public AnimationUtil(Context context, ImageView image, Bitmap result){
		this.context = context;
		bitmap = result;
		imageView = image;
		Prefs prefs = new Prefs(context);
		animeType = prefs.retrieveAnimationPref();
		isFirstAnimation = true;
	}
	
	public void doAnimation(){
		imageView.setVisibility(View.VISIBLE);
		switch (animeType) {
		case 1:
			imageView.setImageBitmap(bitmap);
			break;
		case 2:
			anim_out = AnimationUtils.loadAnimation(context, R.anim.fadeout); 
			anim_in  = AnimationUtils.loadAnimation(context, R.anim.fadein);
			anim_out_first = AnimationUtils.loadAnimation(context, R.anim.fadeout);
			startAnimation(bitmap);
			break;
		case 3:
			anim_out = AnimationUtils.loadAnimation(context, R.anim.left_to_right_out); 
		    anim_in  = AnimationUtils.loadAnimation(context, R.anim.left_to_right_in);
		    anim_out_first = AnimationUtils.loadAnimation(context, R.anim.left_to_right_out);
			startAnimation(bitmap);
			break;
		default:
			
			break;
		}

	}
	
	public void startAnimation(final Bitmap b) {
		anim_in.setAnimationListener(new AnimationListener() {
			
			@Override
			public void onAnimationStart(Animation animation) {}
			
			@Override
			public void onAnimationRepeat(Animation animation) {}
			
			@Override
			public void onAnimationEnd(Animation animation) {}
		});
		anim_out_first.setAnimationListener(new AnimationListener() {
			
			@Override
			public void onAnimationStart(Animation animation) {}
			
			@Override
			public void onAnimationRepeat(Animation animation) {}
			
			@Override
			public void onAnimationEnd(Animation animation) {
				imageView.startAnimation(anim_in);
			}
		});
		anim_out.setAnimationListener(new AnimationListener() {
			
			@Override
			public void onAnimationStart(Animation animation) {}
			
			@Override
			public void onAnimationRepeat(Animation animation) {}
			
			@Override
			public void onAnimationEnd(Animation animation) {

				imageView.setImageBitmap(b); 

				
				imageView.startAnimation(anim_in);
			}
		});
		if (isFirstAnimation){
			isFirstAnimation = false;
			imageView.startAnimation(anim_out_first);
			//imageView.startAnimation(anim_in);
		}else{
			imageView.startAnimation(anim_out);
		//imageView.startAnimation(anim_out);
		}
	}

}
